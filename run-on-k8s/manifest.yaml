apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: k8sdash
  name: k8sdash
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8sdash
rules:
- apiGroups: [""]
  resources: ["nodes", "pods", "services"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8sdash
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8sdash
subjects:
- kind: ServiceAccount
  name: k8sdash
  namespace: default
---
apiVersion: v1
kind: Secret
metadata:
  name: k8sdash-secret
stringData:
  adminpassword: supersecret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8sdash
  labels:
    app: k8sdash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8sdash
  template:
    metadata:
      labels:
        app: k8sdash
    spec:
      serviceAccountName: k8sdash
      containers:
      - name: k8sdash
        image: k8sdash:89ee9ba
        imagePullPolicy: Never # Image manually added to microk8s https://microk8s.io/docs/registry-images
        ports:
        - containerPort: 8000
        env:
        - name: K8S_DASH_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: k8sdash-secret
              key: adminpassword
---
apiVersion: v1
kind: Service
metadata:
  name: k8sdash
spec:
  selector:
    app: k8sdash
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    port: 8000
